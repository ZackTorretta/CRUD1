@page "/add"
@inject NavigationManager UriHelper
@using CRUD1.Data

@inject PersonServices service


<div class="container">

</div>
	<div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">

            <div class="p-3 mb-3 bg-primary text-white text-center">Add New Person</div>

            <EditForm Model="@NewPerson" OnValidSubmit="@AddNewPerson">
				<DataAnnotationsValidator />
				<ValidationSummary />
                <div class="form-group"> @*Last name*@
                    <label for="LastName">First Name</label>
                    <input type="text" id="FirstName" class="form-control" @bind-value="@NewPerson.FirstName" />
                </div>

				<div class="form-group"> @*Last name*@
                    <label for="LastName">Last Name</label>
                    <input type="text" id="LastName" class="form-control" @bind-value="@NewPerson.LastName" />
                </div>

				<div class="form-group"> @*phone number*@
                    <label for="PhoneNumber">Phone Number</label>
                    <input type="text" id="PhoneNumber" class="form-control" @bind-value="@NewPerson.PhoneNumber" />
                </div>

				<div class="form-group"> @*birth date*@
                    <label for="BirthDate">birth date</label>
                    <input type="date" id="BirthDate" class="form-control" @bind-value="@NewPerson.BirthDate" />
                </div>
				
                <div class="text-center p-3 mb-3">
                    <button type="submit">Add Person</button>
                </div>
            </EditForm>
        </div>

        
    </div>


@code {


	void Navigate()
	{
    UriHelper.NavigateTo("add");
	}


	List<Person> Persons = new List<Person>();
	protected override async Task OnInitializedAsync()
	{
		await RefreshPersons();
	}
	private async Task RefreshPersons()
	{
		Persons = await service.GetPersonAsync();
	}

	public Person NewPerson { get; set; } = new Person();

	private async Task AddNewPerson()
	{
		
			await service.AddPersonAsync(NewPerson);

			NewPerson = new Person();
			await RefreshPersons();
			UriHelper.NavigateTo("/");

	}




}